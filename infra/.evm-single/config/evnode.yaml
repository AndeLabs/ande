# Path inside the root directory where the database is located
db_path: data
p2p:
  # Address to listen for incoming connections (host:port)
  listen_address: /ip4/0.0.0.0/tcp/7676
  # Comma separated list of peers to connect to
  peers: ""
  # Comma separated list of peer IDs to block from connecting
  blocked_peers: ""
  # Comma separated list of peer IDs to allow connections from
  allowed_peers: ""
node:
  # Run node in aggregator mode
  aggregator: false
  # Run node in light mode
  light: false
  # Block time (duration). Examples: "500ms", "1s", "5s", "1m", "2m30s", "10m".
  block_time: 5s
  # Maximum number of headers or data pending DA submission. When this limit is reached, the aggregator pauses block production until some headers or data are confirmed. Use 0 for no limit.
  max_pending_headers_and_data: 0
  # Enables lazy aggregation mode, where blocks are only produced when transactions are available or after LazyBlockTime. Optimizes resources by avoiding empty block creation during periods of inactivity.
  lazy_mode: false
  # Maximum interval between blocks in lazy aggregation mode (LazyAggregator). Ensures blocks are produced periodically even without transactions to keep the chain active. Generally larger than BlockTime.
  lazy_block_interval: 1m0s
  # Initial trusted hash used to bootstrap the header exchange service. Allows nodes to start synchronizing from a specific trusted point in the chain instead of genesis. When provided, the node will fetch the corresponding header/block from peers using this hash and use it as a starting point for synchronization. If not provided, the node will attempt to fetch the genesis block instead.
  trusted_hash: ""
  # How many blocks behind best-known head the node can be and still be considered ready. 0 means must be exactly at head.
  readiness_max_blocks_behind: 3
da:
  # Address of the data availability layer service (host:port). This is the endpoint where Rollkit will connect to submit and retrieve data.
  # Using local Celestia Light Node v0.27.5 for mocha-4 testnet
  address: http://localhost:26658
  # Authentication token for the data availability layer service. Required if the DA service needs authentication.
  auth_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJwdWJsaWMiLCJyZWFkIiwid3JpdGUiLCJhZG1pbiJdLCJOb25jZSI6Ii9JMzdSNmZxZG9MOTIyM0JyNkFNaGJ3YW1hVmx4U2ZLajdBZldhaDVHdlk9IiwiRXhwaXJlc0F0IjoiMDAwMS0wMS0wMVQwMDowMDowMFoifQ.OqHgOoHtBz3QQ6guNkQgBNRDAN8rObS9nqHbUQdbB-k"
  # Gas price for data availability transactions. Use -1 for automatic gas price determination. Higher values may result in faster inclusion.
  gas_price: -1.0
  # Multiplier applied to gas price when retrying failed DA submissions. Values > 1 increase gas price on retries to improve chances of inclusion.
  gas_multiplier: 0.0
  # Additional options passed to the DA layer when submitting data. Format depends on the specific DA implementation being used.
  submit_options: ""
  # Namespace ID used when submitting blobs to the DA layer. When a DataNamespace is provided, only the header is sent to this namespace.
  namespace: "73100c8d"
  # Namespace ID for submitting data to DA layer. Use this to speed-up light clients.
  data_namespace: "f9f23cc5"
  # Average block time of the DA chain (duration). Determines frequency of DA layer syncing, maximum backoff time for retries, and is multiplied by MempoolTTL to calculate transaction expiration. Examples: "15s", "30s", "1m", "2m30s", "10m".
  block_time: 12s
  # Starting block height on the DA layer from which to begin syncing. Useful when deploying a new chain on an existing DA chain.
  start_height: 3000000
  # Number of DA blocks after which a transaction is considered expired and dropped from the mempool. Controls retry backoff timing.
  mempool_ttl: 0
  # Maximum number of attempts to submit data to the DA layer before giving up. Higher values provide more resilience but can delay error reporting.
  max_submit_attempts: 30
rpc:
  # Address to bind the RPC server to (host:port). Default: 127.0.0.1:7331
  address: 127.0.0.1:7331
  # Enable DA visualization endpoints for monitoring blob submissions. Default: false
  enable_da_visualization: false
instrumentation:
  prometheus: false
  prometheus_listen_addr: :26660
  max_open_connections: 3
  namespace: evnode
  pprof: false
  pprof_listen_addr: :6060
log:
  # Log level (debug, info, warn, error)
  level: info
  # Log format (text, json)
  format: text
  # Enable stack traces in error logs
  trace: false
signer:
  # Type of remote signer to use (file, grpc)
  signer_type: file
  # Path to the signer file or address
  signer_path: config
