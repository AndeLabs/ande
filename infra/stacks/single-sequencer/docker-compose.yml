# AndeChain Production Stack
# Evolve Sequencer + ev-reth + Celestia Mocha-4 DA
# For production-ready sovereign rollup

version: "3.8"

services:
  # JWT secret initialization
  jwt-init:
    container_name: jwt-init
    image: alpine:3.22.0
    volumes:
      - jwttoken:/jwt
    command: >
      /bin/sh -c "
      if [ ! -f /jwt/jwt.hex ]; then
        apk add --no-cache openssl &&
        openssl rand -hex 32 | tr -d '\n' > /jwt/jwt.hex &&
        echo 'JWT generated';
      else
        echo 'JWT exists';
      fi"
    networks:
      - evstack_shared

  # Celestia Mocha-4 light node (PRODUCTION DA)
  celestia-light:
    container_name: celestia-light
    image: ghcr.io/celestiaorg/celestia-node:v0.27.5-mocha
    restart: unless-stopped
    depends_on:
      jwt-init:
        condition: service_completed_successfully
    ports:
      - "26658:26658"  # RPC
    volumes:
      - celestia-data:/home/celestia
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        if [ ! -d "/home/celestia/keys" ]; then
          echo "Initializing Celestia light node...";
          celestia light init --p2p.network mocha-4;
        fi
        echo "Starting Celestia light node...";
        celestia light start \
          --core.ip rpc-mocha.pops.one \
          --p2p.network mocha-4 \
          --rpc.addr 0.0.0.0 \
          --rpc.port 26658
    networks:
      - evstack_shared

  # ev-reth - Execution client (EVM)
  ev-reth:
    container_name: ev-reth
    image: andelabs/ev-reth:latest
    pull_policy: never
    depends_on:
      - jwt-init
    ports:
      - "8545:8545"   # HTTP RPC
      - "8546:8546"   # WebSocket
      - "8551:8551"   # Engine API
      - "30303:30303" # P2P
      - "9001:9001"   # Metrics
    restart: unless-stopped
    volumes:
      - ./genesis.json:/genesis.json:ro
      - jwttoken:/jwt:ro
      - ev-reth-data:/data
    environment:
      - RUST_LOG=info,ev_reth=debug,reth=info
      - RUST_BACKTRACE=1
    command:
      - node
      - --chain=/genesis.json
      - --datadir=/data
      - --http
      - --http.addr=0.0.0.0
      - --http.port=8545
      - --http.api=admin,eth,net,web3,txpool,debug,trace
      - --http.corsdomain=*
      - --ws
      - --ws.addr=0.0.0.0
      - --ws.port=8546
      - --ws.api=eth,net,web3,txpool
      - --ws.origins=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.port=8551
      - --authrpc.jwtsecret=/jwt/jwt.hex
      - --port=30303
      - --discovery.addr=0.0.0.0
      - --discovery.port=30303
      - --max-outbound-peers=50
      - --max-inbound-peers=30
      - --metrics=0.0.0.0:9001
    networks:
      - evstack_shared

  # Evolve Sequencer - Block production & consensus
  evolve-sequencer:
    container_name: evolve-sequencer
    image: ghcr.io/evstack/ev-node-evm-single:main
    pull_policy: always
    depends_on:
      - ev-reth
      - celestia-light
      - jwt-init
    restart: unless-stopped
    volumes:
      - jwttoken:/jwt:ro
      - evolve-data:/root/.evolve
    ports:
      - "26660:26660"  # Prometheus metrics
      - "7331:7331"    # RPC
      - "7676:7676"    # P2P
    environment:
      - EV_HOME=/root/.evolve
      - JWT_SECRET_PATH=/jwt/jwt.hex
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        set -e
        echo 'üöÄ Starting Evolve Sequencer for AndeChain'
        
        # Load JWT secret
        JWT_SECRET=$$(cat /jwt/jwt.hex)
        echo '‚úÖ JWT loaded'
        
        # Wait for ev-reth to be ready
        echo '‚è≥ Waiting for ev-reth to be ready...'
        sleep 20
        
        # Initialize if node_key doesn't exist (first run)
        if [ ! -f /root/.evolve/config/node_key.json ]; then
          echo 'üìù Initializing sequencer (first run)'
          evm-single init \
            --home=/root/.evolve \
            --evnode.node.aggregator=true \
            --evnode.signer.passphrase=andechain-production-secure-2025
          echo '‚úÖ Sequencer initialized'
        else
          echo '‚úÖ Sequencer already initialized'
        fi
        
        # Auto-retrieve genesis hash from ev-reth
        echo 'üîç Retrieving genesis hash from ev-reth...'
        GENESIS_HASH=""
        for i in 1 2 3 4 5; do
          GENESIS_HASH=$$(curl -s -X POST http://ev-reth:8545 \
            -H "Content-Type: application/json" \
            -d '{"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":["0x0",false],"id":1}' \
            | grep -o '"hash":"0x[^"]*"' | cut -d'"' -f4 || echo "")
          if [ -n "$$GENESIS_HASH" ]; then
            echo "‚úÖ Genesis hash retrieved: $$GENESIS_HASH"
            break
          fi
          echo "‚è≥ Waiting for ev-reth RPC... ($$i/5)"
          sleep 5
        done
        
        if [ -z "$$GENESIS_HASH" ]; then
          echo "‚ùå Failed to retrieve genesis hash"
          exit 1
        fi
        
        # Start sequencer with all parameters
        echo 'üöÄ Starting sequencer with auto-configured params'
        exec evm-single start \
          --home=/root/.evolve \
          --evm.eth-url=http://ev-reth:8545 \
          --evm.engine-url=http://ev-reth:8551 \
          --evm.jwt-secret="$$JWT_SECRET" \
          --evm.genesis-hash="$$GENESIS_HASH" \
          --evnode.node.aggregator=true \
          --evnode.node.block_time=2s \
          --evnode.da.address=http://celestia-light:26658 \
          --evnode.da.namespace=000000000000000000000000000000000000616e6465636861696e2d7631 \
          --evnode.signer.passphrase=andechain-production-secure-2025 \
          --evnode.log.level=info \
          --evnode.instrumentation.prometheus=true \
          --evnode.instrumentation.prometheus_listen_addr=:26660
    networks:
      - evstack_shared

  # Prometheus - Metrics collection
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    depends_on:
      - ev-reth
      - evolve-sequencer
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - evstack_shared

  # Grafana - Monitoring dashboards
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
    networks:
      - evstack_shared


volumes:
  jwttoken:
    driver: local
  celestia-data:
    driver: local
  ev-reth-data:
    driver: local
  evolve-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

