# =====================================================================
# ANDECHAIN PRODUCTION NGINX CONFIGURATION
# =====================================================================
# Production-grade reverse proxy configuration for AndeChain mainnet
# Supports: rpc.ande.network, ws.ande.network, api.ande.network
# Features: SSL/TLS, Rate Limiting, Security Headers, CORS
# =====================================================================

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format json_combined escape=json
        '{'
            '"time_local":"$time_local",'
            '"remote_addr":"$remote_addr",'
            '"request":"$request",'
            '"status":$status,'
            '"body_bytes_sent":$body_bytes_sent,'
            '"request_time":$request_time,'
            '"http_user_agent":"$http_user_agent"'
        '}';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance Optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types text/plain text/css text/xml text/javascript 
               application/x-javascript application/xml+rss 
               application/json application/javascript;
    gzip_disable "msie6";

    # =====================================================================
    # RATE LIMITING ZONES
    # =====================================================================
    
    # Standard RPC rate limiting (10 requests/second per IP)
    limit_req_zone $binary_remote_addr zone=rpc_standard:10m rate=10r/s;
    
    # Premium RPC rate limiting (100 requests/second per IP)
    limit_req_zone $binary_remote_addr zone=rpc_premium:10m rate=100r/s;
    
    # WebSocket connections (5 concurrent per IP)
    limit_conn_zone $binary_remote_addr zone=ws_limit:10m;
    
    # API endpoints (50 requests/second per IP)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=50r/s;
    
    # Health checks (no limit)
    geo $limit_health {
        default 1;
        127.0.0.1 0;
        ::1 0;
    }
    map $limit_health $limit_health_key {
        0 "";
        1 $binary_remote_addr;
    }
    limit_req_zone $limit_health_key zone=health_limit:1m rate=100r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr_limit:10m;

    # =====================================================================
    # UPSTREAM SERVERS
    # =====================================================================
    
    upstream ev_reth_http {
        least_conn;
        server ev-reth-sequencer:8545 max_fails=3 fail_timeout=30s;
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream ev_reth_ws {
        least_conn;
        server ev-reth-sequencer:8546 max_fails=3 fail_timeout=30s;
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream evolve_rpc {
        least_conn;
        server evolve-sequencer:7331 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # =====================================================================
    # HTTP TO HTTPS REDIRECT
    # =====================================================================
    
    server {
        listen 80;
        listen [::]:80;
        server_name rpc.ande.network ws.ande.network api.ande.network ande.network www.ande.network;
        
        # ACME Challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # =====================================================================
    # RPC.ANDE.NETWORK - JSON-RPC ENDPOINT
    # =====================================================================
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name rpc.ande.network;

        # SSL Configuration (will be managed by certbot)
        ssl_certificate /etc/letsencrypt/live/rpc.ande.network/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/rpc.ande.network/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/rpc.ande.network/chain.pem;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # Security Headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # CORS Configuration
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Max-Age 86400 always;

        # Handle OPTIONS preflight
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "POST, GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }

        # Rate limiting
        limit_req zone=rpc_standard burst=20 nodelay;
        limit_conn addr_limit 10;

        # Health check
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # Main RPC endpoint
        location / {
            proxy_pass http://ev_reth_http;
            proxy_http_version 1.1;
            
            # Connection settings
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 2;
        }

        # API info endpoint
        location /info {
            access_log off;
            default_type application/json;
            return 200 '{
                "network": "AndeChain Mainnet",
                "chainId": 6174,
                "rpc": "https://rpc.ande.network",
                "ws": "wss://ws.ande.network",
                "explorer": "https://explorer.ande.network",
                "status": "operational"
            }';
        }
    }

    # =====================================================================
    # WS.ANDE.NETWORK - WEBSOCKET ENDPOINT
    # =====================================================================
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ws.ande.network;

        # SSL Configuration (same as RPC)
        ssl_certificate /etc/letsencrypt/live/ws.ande.network/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ws.ande.network/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security Headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;

        # WebSocket connection limiting
        limit_conn ws_limit 5;

        # Main WebSocket endpoint
        location / {
            proxy_pass http://ev_reth_ws;
            proxy_http_version 1.1;
            
            # WebSocket upgrade
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Long timeouts for WebSocket
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Buffering off for WebSocket
            proxy_buffering off;
        }
    }

    # =====================================================================
    # API.ANDE.NETWORK - REST API & UTILITIES
    # =====================================================================
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.ande.network;

        # SSL Configuration
        ssl_certificate /etc/letsencrypt/live/api.ande.network/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.ande.network/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security Headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Access-Control-Allow-Origin "*" always;

        # Rate limiting
        limit_req zone=api_limit burst=50 nodelay;

        # Health check
        location /health {
            limit_req zone=health_limit burst=10 nodelay;
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # Network info
        location /info {
            access_log off;
            default_type application/json;
            return 200 '{
                "network": "AndeChain Mainnet",
                "chainId": 6174,
                "chainIdHex": "0x181e",
                "nativeCurrency": {
                    "name": "ANDE",
                    "symbol": "ANDE",
                    "decimals": 18
                },
                "rpcUrls": {
                    "default": "https://rpc.ande.network",
                    "public": "https://rpc.ande.network"
                },
                "blockExplorerUrls": {
                    "default": "https://explorer.ande.network"
                },
                "websocket": "wss://ws.ande.network",
                "features": ["EIP1559", "TokenDuality", "ERC20Votes"],
                "status": "operational"
            }';
        }

        # Chainlist metadata
        location /chainlist {
            access_log off;
            default_type application/json;
            return 200 '{
                "name": "AndeChain",
                "chain": "ANDE",
                "icon": "ande",
                "rpc": ["https://rpc.ande.network"],
                "faucets": [],
                "nativeCurrency": {
                    "name": "ANDE",
                    "symbol": "ANDE",
                    "decimals": 18
                },
                "infoURL": "https://ande.network",
                "shortName": "ande",
                "chainId": 6174,
                "networkId": 6174,
                "slip44": 6174,
                "explorers": [{
                    "name": "AndeChain Explorer",
                    "url": "https://explorer.ande.network",
                    "standard": "EIP3091"
                }]
            }';
        }

        # Evolve sequencer status
        location /evolve {
            proxy_pass http://evolve_rpc;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 30s;
        }

        # Default
        location / {
            return 301 /info;
        }
    }

    # =====================================================================
    # WWW.ANDE.NETWORK & ANDE.NETWORK - MAIN WEBSITE
    # =====================================================================
    
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name ande.network www.ande.network;

        # SSL Configuration
        ssl_certificate /etc/letsencrypt/live/ande.network/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ande.network/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security Headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Temporary landing page
        location / {
            default_type text/html;
            return 200 '<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AndeChain - Sovereign EVM Rollup</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
        }
        .container {
            text-align: center;
            padding: 2rem;
            max-width: 800px;
        }
        h1 { font-size: 3rem; margin-bottom: 1rem; }
        p { font-size: 1.2rem; margin-bottom: 2rem; opacity: 0.9; }
        .links { display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap; }
        .link {
            background: rgba(255,255,255,0.1);
            backdrop-filter: blur(10px);
            padding: 1rem 2rem;
            border-radius: 10px;
            text-decoration: none;
            color: white;
            transition: all 0.3s;
            border: 1px solid rgba(255,255,255,0.2);
        }
        .link:hover {
            background: rgba(255,255,255,0.2);
            transform: translateY(-2px);
        }
        .info {
            margin-top: 3rem;
            background: rgba(0,0,0,0.2);
            padding: 1.5rem;
            border-radius: 10px;
            font-size: 0.9rem;
        }
        .status {
            display: inline-block;
            background: #10b981;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.8rem;
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="status">● OPERATIONAL</div>
        <h1>🏔️ AndeChain</h1>
        <p>Sovereign EVM Rollup with Token Duality</p>
        
        <div class="links">
            <a href="https://rpc.ande.network/info" class="link">🔗 RPC Endpoint</a>
            <a href="https://api.ande.network/info" class="link">📡 API Info</a>
            <a href="https://explorer.ande.network" class="link">🔍 Explorer</a>
        </div>
        
        <div class="info">
            <strong>Network Information</strong><br>
            Chain ID: 6174 (0x181e)<br>
            RPC: https://rpc.ande.network<br>
            WebSocket: wss://ws.ande.network<br>
            Native Token: ANDE (Token Duality)
        </div>
    </div>
</body>
</html>';
        }
    }
}
