version: '3.8'

services:
  zk-prover:
    build:
      context: ../prover
      dockerfile: Dockerfile
    container_name: zk-prover
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8081:8081"  # Metrics
    volumes:
      - ./prover-circuits:/app/circuits
      - ./prover-keys:/app/keys
      - prover-data:/app/data
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - REDIS_URL=redis://redis:6379
      - CELESTIA_RPC_URL=http://celestia-light-client:26657
      - METRICS_PORT=8081
    depends_on:
      - redis
    networks:
      - ande-zk-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: zk-prover-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - ande-zk-network

  prover-worker:
    build:
      context: ../prover
      dockerfile: Dockerfile.worker
    container_name: zk-prover-worker
    restart: unless-stopped
    volumes:
      - ./prover-circuits:/app/circuits
      - ./prover-keys:/app/keys
      - prover-data:/app/data
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - REDIS_URL=redis://redis:6379
      - WORKER_CONCURRENCY=4
    depends_on:
      - redis
    networks:
      - ande-zk-network
    deploy:
      replicas: 2

networks:
  ande-zk-network:
    external: true

volumes:
  prover-data:
    driver: local
  redis-data:
    driver: local