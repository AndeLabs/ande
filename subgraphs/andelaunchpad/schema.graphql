# AndeLaunchpad Subgraph Schema
# Indexes all IDO and token launches on AndeChain

type LaunchpadProtocol @entity {
  id: ID!
  totalLaunches: Int!
  totalRaisedUSD: BigDecimal!
  totalParticipants: Int!
  activeIDOs: Int!
  completedIDOs: Int!
  
  # Relationships
  idos: [IDO!]! @derivedFrom(field: "protocol")
  tokens: [LaunchedToken!]! @derivedFrom(field: "protocol")
}

type IDO @entity {
  id: ID!
  protocol: LaunchpadProtocol!
  
  # Token info
  token: LaunchedToken!
  
  # IDO parameters
  hardcap: BigDecimal!
  softcap: BigDecimal!
  maxContribution: BigDecimal!
  minContribution: BigDecimal!
  pricePerToken: BigDecimal!
  
  # Timing
  startTime: BigInt!
  endTime: BigInt!
  claimTime: BigInt
  
  # Status
  status: IDOStatus!
  whitelistEnabled: Boolean!
  
  # Fundraising
  totalRaised: BigDecimal!
  totalRaisedUSD: BigDecimal!
  totalTokensSold: BigDecimal!
  totalParticipants: Int!
  
  # Vesting
  vestingEnabled: Boolean!
  vestingDuration: BigInt
  vestingCliff: BigInt
  
  # Project info
  projectName: String!
  projectDescription: String
  projectWebsite: String
  projectTwitter: String
  projectTelegram: String
  
  # Creator
  creator: Bytes!
  
  # Timestamps
  createdTimestamp: BigInt!
  createdBlockNumber: BigInt!
  
  # Relationships
  contributions: [Contribution!]! @derivedFrom(field: "ido")
  claims: [Claim!]! @derivedFrom(field: "ido")
  participants: [Participant!]! @derivedFrom(field: "ido")
  
  # Daily snapshots
  dailySnapshots: [IDODailySnapshot!]! @derivedFrom(field: "ido")
}

enum IDOStatus {
  UPCOMING
  ACTIVE
  ENDED_SUCCESS
  ENDED_FAILED
  CANCELLED
}

type LaunchedToken @entity {
  id: ID!
  protocol: LaunchpadProtocol!
  
  # Token info
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigDecimal!
  
  # Token type
  mintable: Boolean!
  burnable: Boolean!
  pausable: Boolean!
  taxRate: BigInt
  
  # Associated IDO
  ido: IDO
  
  # Creator
  creator: Bytes!
  
  # Timestamps
  createdTimestamp: BigInt!
  createdBlockNumber: BigInt!
}

type Participant @entity {
  id: ID!
  address: Bytes!
  ido: IDO!
  
  # Tier info
  tier: Tier!
  andeStaked: BigDecimal!
  allocationMultiplier: Int!
  
  # Contribution
  totalContributed: BigDecimal!
  totalContributedUSD: BigDecimal!
  tokensAllocated: BigDecimal!
  tokensClaimed: BigDecimal!
  
  # Whitelist
  isWhitelisted: Boolean!
  whitelistProof: [Bytes!]
  
  # Timestamps
  firstContributionTimestamp: BigInt!
  lastClaimTimestamp: BigInt
  
  # Relationships
  contributions: [Contribution!]! @derivedFrom(field: "participant")
  claims: [Claim!]! @derivedFrom(field: "participant")
}

enum Tier {
  BRONZE
  SILVER
  GOLD
  PLATINUM
}

type Contribution @entity {
  id: ID!
  hash: Bytes!
  logIndex: Int!
  
  # References
  ido: IDO!
  participant: Participant!
  
  # Amounts
  amount: BigDecimal!
  amountUSD: BigDecimal!
  tokensReceived: BigDecimal!
  
  # Timestamp
  timestamp: BigInt!
  blockNumber: BigInt!
}

type Claim @entity {
  id: ID!
  hash: Bytes!
  logIndex: Int!
  
  # References
  ido: IDO!
  participant: Participant!
  
  # Amounts
  amount: BigDecimal!
  amountUSD: BigDecimal!
  
  # Timestamp
  timestamp: BigInt!
  blockNumber: BigInt!
}

type Refund @entity {
  id: ID!
  hash: Bytes!
  logIndex: Int!
  
  # References
  ido: IDO!
  participant: Participant!
  
  # Amounts
  amount: BigDecimal!
  amountUSD: BigDecimal!
  
  # Reason
  reason: RefundReason!
  
  # Timestamp
  timestamp: BigInt!
  blockNumber: BigInt!
}

enum RefundReason {
  SOFTCAP_NOT_REACHED
  IDO_CANCELLED
  EXCESS_CONTRIBUTION
}

# Daily aggregated data
type IDODailySnapshot @entity {
  id: ID!
  ido: IDO!
  timestamp: BigInt!
  blockNumber: BigInt!
  
  # Daily metrics
  dailyContributions: BigDecimal!
  dailyContributionsUSD: BigDecimal!
  dailyParticipants: Int!
  
  # Cumulative
  totalRaised: BigDecimal!
  totalRaisedUSD: BigDecimal!
  totalParticipants: Int!
  
  # Progress
  percentageRaised: BigDecimal!
}

type LaunchpadDailySnapshot @entity {
  id: ID!
  protocol: LaunchpadProtocol!
  timestamp: BigInt!
  blockNumber: BigInt!
  
  # Daily metrics
  dailyLaunches: Int!
  dailyRaisedUSD: BigDecimal!
  dailyParticipants: Int!
  
  # Cumulative
  totalLaunches: Int!
  totalRaisedUSD: BigDecimal!
  totalParticipants: Int!
}

# Factory events
type TokenCreated @entity {
  id: ID!
  hash: Bytes!
  logIndex: Int!
  
  # Token
  token: LaunchedToken!
  
  # Creator
  creator: Bytes!
  
  # Config
  name: String!
  symbol: String!
  totalSupply: BigDecimal!
  
  # Timestamp
  timestamp: BigInt!
  blockNumber: BigInt!
}
