# AndeSwap Subgraph Schema
# Indexes all DEX activity on AndeChain

type Factory @entity {
  id: ID!
  pairCount: Int!
  totalVolumeUSD: BigDecimal!
  totalVolumeANDE: BigDecimal!
  untrackedVolumeUSD: BigDecimal!
  totalLiquidityUSD: BigDecimal!
  totalLiquidityANDE: BigDecimal!
  txCount: BigInt!
  pairs: [Pair!]! @derivedFrom(field: "factory")
}

type Token @entity {
  id: ID!
  symbol: String!
  name: String!
  decimals: BigInt!
  totalSupply: BigInt!
  
  # Volume
  tradeVolume: BigDecimal!
  tradeVolumeUSD: BigDecimal!
  untrackedVolumeUSD: BigDecimal!
  
  # Liquidity
  totalLiquidity: BigDecimal!
  
  # Price
  derivedANDE: BigDecimal
  derivedUSD: BigDecimal
  
  # Transactions
  txCount: BigInt!
  
  # Relationships
  pairBase: [Pair!]! @derivedFrom(field: "token0")
  pairQuote: [Pair!]! @derivedFrom(field: "token1")
  
  # Token day data
  tokenDayData: [TokenDayData!]! @derivedFrom(field: "token")
}

type Pair @entity {
  id: ID!
  factory: Factory!
  token0: Token!
  token1: Token!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!
  
  # Derived liquidity
  reserveANDE: BigDecimal!
  reserveUSD: BigDecimal!
  
  # Used for separating per pair reserves and global
  trackedReserveANDE: BigDecimal!
  
  # Price
  token0Price: BigDecimal!
  token1Price: BigDecimal!
  
  # Volume
  volumeToken0: BigDecimal!
  volumeToken1: BigDecimal!
  volumeUSD: BigDecimal!
  untrackedVolumeUSD: BigDecimal!
  
  # Transactions
  txCount: BigInt!
  
  # Timestamps
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  
  # Relationships
  liquidityPositions: [LiquidityPosition!]! @derivedFrom(field: "pair")
  liquidityPositionSnapshots: [LiquidityPositionSnapshot!]! @derivedFrom(field: "pair")
  mints: [Mint!]! @derivedFrom(field: "pair")
  burns: [Burn!]! @derivedFrom(field: "pair")
  swaps: [Swap!]! @derivedFrom(field: "pair")
  
  # Pair hour data
  pairHourData: [PairHourData!]! @derivedFrom(field: "pair")
  pairDayData: [PairDayData!]! @derivedFrom(field: "pair")
}

type User @entity {
  id: ID!
  liquidityPositions: [LiquidityPosition!]! @derivedFrom(field: "user")
  usdSwapped: BigDecimal!
}

type LiquidityPosition @entity {
  id: ID!
  user: User!
  pair: Pair!
  liquidityTokenBalance: BigDecimal!
}

type LiquidityPositionSnapshot @entity {
  id: ID!
  liquidityPosition: LiquidityPosition!
  timestamp: Int!
  block: Int!
  user: User!
  pair: Pair!
  token0PriceUSD: BigDecimal!
  token1PriceUSD: BigDecimal!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  reserveUSD: BigDecimal!
  liquidityTokenTotalSupply: BigDecimal!
  liquidityTokenBalance: BigDecimal!
}

type Transaction @entity {
  id: ID!
  blockNumber: BigInt!
  timestamp: BigInt!
  mints: [Mint!]! @derivedFrom(field: "transaction")
  burns: [Burn!]! @derivedFrom(field: "transaction")
  swaps: [Swap!]! @derivedFrom(field: "transaction")
}

type Mint @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  pair: Pair!
  to: Bytes!
  liquidity: BigDecimal!
  sender: Bytes
  amount0: BigDecimal
  amount1: BigDecimal
  logIndex: BigInt
  amountUSD: BigDecimal
  feeTo: Bytes
  feeLiquidity: BigDecimal
}

type Burn @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  pair: Pair!
  liquidity: BigDecimal!
  sender: Bytes
  amount0: BigDecimal
  amount1: BigDecimal
  to: Bytes
  logIndex: BigInt
  amountUSD: BigDecimal
  needsComplete: Boolean!
  feeTo: Bytes
  feeLiquidity: BigDecimal
}

type Swap @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  pair: Pair!
  sender: Bytes!
  from: Bytes!
  amount0In: BigDecimal!
  amount1In: BigDecimal!
  amount0Out: BigDecimal!
  amount1Out: BigDecimal!
  to: Bytes!
  logIndex: BigInt
  amountUSD: BigDecimal!
}

type Bundle @entity {
  id: ID!
  andePrice: BigDecimal!
}

# Data aggregated by day
type PairDayData @entity {
  id: ID!
  date: Int!
  pairAddress: Bytes!
  pair: Pair!
  token0: Token!
  token1: Token!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!
  reserveUSD: BigDecimal!
  dailyVolumeToken0: BigDecimal!
  dailyVolumeToken1: BigDecimal!
  dailyVolumeUSD: BigDecimal!
  dailyTxns: BigInt!
}

type PairHourData @entity {
  id: ID!
  hourStartUnix: Int!
  pair: Pair!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!
  reserveUSD: BigDecimal!
  hourlyVolumeToken0: BigDecimal!
  hourlyVolumeToken1: BigDecimal!
  hourlyVolumeUSD: BigDecimal!
  hourlyTxns: BigInt!
}

type TokenDayData @entity {
  id: ID!
  date: Int!
  token: Token!
  dailyVolumeToken: BigDecimal!
  dailyVolumeANDE: BigDecimal!
  dailyVolumeUSD: BigDecimal!
  dailyTxns: BigInt!
  totalLiquidityToken: BigDecimal!
  totalLiquidityANDE: BigDecimal!
  totalLiquidityUSD: BigDecimal!
  priceUSD: BigDecimal!
}

type FactoryDayData @entity {
  id: ID!
  date: Int!
  dailyVolumeUSD: BigDecimal!
  dailyVolumeANDE: BigDecimal!
  totalVolumeUSD: BigDecimal!
  totalVolumeANDE: BigDecimal!
  dailyVolumeUntracked: BigDecimal!
  totalLiquidityUSD: BigDecimal!
  totalLiquidityANDE: BigDecimal!
  txCount: BigInt!
}
