# =========================================================================
# ANDE CHAIN - PRODUCTION PARALLEL EVM CONFIGURATION
# =========================================================================
# High-throughput configuration for prime-time sovereign rollup
# Optimized for: 16-core systems with 16GB+ RAM
# Expected Performance: 1000+ TPS with parallel execution
# =========================================================================

[parallel_execution]

# =========================================================================
# HIGH THROUGHPUT PROFILE - Production Ready
# =========================================================================

# Worker threads for parallel execution (16 cores = maximum throughput)
# Adjust based on available CPU cores (4, 8, 16, 32)
concurrency_level = 16

# Enable lazy updates for ANDE Token Duality optimization
# Critical for maintaining dual-token performance
enable_lazy_updates = true

# Maximum retries for conflicting transactions
# Higher values = better reliability, slightly higher latency
max_retries = 3

# Minimum transactions to trigger parallel execution
# Lower threshold = more opportunities for parallelism
min_transactions_for_parallel = 2

# Force sequential execution (disable for production)
force_sequential = false

# Advanced dependency analysis (Phase 2 feature)
# Enables sophisticated conflict detection and resolution
enable_advanced_dependency_analysis = true

# Maximum depth of transaction dependency chains
# Higher values allow more complex dependency graphs
max_dependency_depth = 20

# Enable comprehensive performance monitoring
enable_monitoring = true

# =========================================================================
# PERFORMANCE OPTIMIZATION
# =========================================================================

[optimization]

# Pre-allocate execution threads on startup
preallocate_workers = true

# Worker thread stack size (MB)
worker_stack_size = 8

# Enable CPU affinity for worker threads
enable_cpu_affinity = true

# Memory pool configuration
[optimization.memory]
# Enable memory pool for faster allocation
enable_memory_pool = true
# Initial pool size (MB)
initial_pool_size = 512
# Maximum pool size (MB)
max_pool_size = 4096

# =========================================================================
# ANDE TOKEN DUALITY OPTIMIZATIONS
# =========================================================================

[ande_token_duality]

[ande_token_duality.precompile]
# Enable lazy balance updates for ANDE transfers
enable_lazy_balance_updates = true

# Batch multiple ANDE transfers in single operation
batch_ande_transfers = true

# Track ANDE-specific metrics for monitoring
track_ande_metrics = true

# Maximum batch size for ANDE transfers
max_batch_size = 100

[ande_token_duality.performance]
# Optimize transaction execution for ANDE transfer patterns
optimize_for_ande_transfers = true

# Cache frequently accessed accounts (exchanges, pools, faucets)
enable_account_cache = true
account_cache_size = 10000

# Common recipient addresses for optimization (add your addresses)
common_recipients = [
    "0x0000000000000000000000000000000000000000",  # Add exchange addresses
    "0x0000000000000000000000000000000000000000",  # Add pool addresses
    "0x0000000000000000000000000000000000000000",  # Add faucet addresses
]

# =========================================================================
# MONITORING & METRICS
# =========================================================================

[monitoring]

[monitoring.metrics]
# Export Prometheus metrics on dedicated port
enable_prometheus = true
prometheus_port = 9091
prometheus_path = "/metrics"

# Detailed transaction timing breakdown
enable_detailed_timing = true

# Track dependency resolution performance
track_dependency_resolution = true

# Memory usage tracking per worker
track_memory_usage = true

# Track worker thread utilization
track_worker_utilization = true

# Export metrics interval (seconds)
metrics_export_interval = 10

[monitoring.logging]
# Log level for parallel execution (info, debug, trace)
log_level = "info"

# Log individual transaction execution (debug only)
log_transaction_execution = false

# Log dependency resolution details (debug only)
log_dependency_resolution = false

# Log scheduler decisions (debug only)
log_scheduler_decisions = false

# =========================================================================
# DEBUGGING & VALIDATION
# =========================================================================

[debugging]

# Enable debug mode (NEVER enable in production)
debug_mode = false

# Validate parallel execution results against sequential
# Adds overhead but ensures correctness
validate_parallel_results = true

# Panic on validation failure (strict mode)
panic_on_validation_failure = false

[debugging.profiling]
# Enable execution time profiling
enable_profiling = false

# Profile output file location
profile_file = "/tmp/andechain-parallel-profile.json"

# Profiling sampling frequency (ms)
sampling_frequency = 100

# =========================================================================
# EXPERIMENTAL FEATURES (Phase 2)
# =========================================================================

[experimental]

[experimental.features]
# Speculative execution for even higher throughput
# Status: BETA - Test before enabling in production
enable_speculative_execution = false

# Parallel block building for faster block production
# Status: BETA - Test before enabling in production
enable_parallel_block_building = false

# Advanced conflict resolution algorithms
# Status: BETA - Test before enabling in production
enable_advanced_conflict_resolution = false

# Adaptive concurrency level based on load
# Status: EXPERIMENTAL - May cause instability
enable_adaptive_concurrency = false

[experimental.adaptive_concurrency]
# Minimum concurrency level
min_concurrency = 4
# Maximum concurrency level
max_concurrency = 32
# Adjustment interval (seconds)
adjustment_interval = 60
# Target CPU utilization (%)
target_cpu_utilization = 80

# =========================================================================
# RESOURCE LIMITS
# =========================================================================

[limits]
# Maximum memory usage per worker (MB)
max_worker_memory = 1024

# Maximum execution time per transaction (ms)
max_execution_time = 5000

# Maximum queue size for pending transactions
max_queue_size = 10000

# Maximum concurrent block executions
max_concurrent_blocks = 2

# =========================================================================
# FALLBACK & RECOVERY
# =========================================================================

[recovery]
# Automatically fallback to sequential on repeated failures
enable_auto_fallback = true

# Number of failures before fallback
fallback_threshold = 10

# Cooldown period before re-enabling parallel (seconds)
fallback_cooldown = 300

# Enable automatic recovery after cooldown
enable_auto_recovery = true

# =========================================================================
# PERFORMANCE PROFILES (Alternative Configurations)
# =========================================================================

# You can switch between profiles by changing the active profile
# Default profile is [parallel_execution] above

[performance_profiles.ultra_high_throughput]
# For 32+ core systems with 32GB+ RAM
concurrency_level = 32
min_transactions_for_parallel = 1
enable_advanced_dependency_analysis = true
max_dependency_depth = 30

[performance_profiles.balanced]
# Balanced profile for 8-core systems
concurrency_level = 8
min_transactions_for_parallel = 3
enable_advanced_dependency_analysis = true
max_dependency_depth = 15

[performance_profiles.low_latency]
# Optimized for lowest latency (4-core)
concurrency_level = 4
min_transactions_for_parallel = 4
enable_advanced_dependency_analysis = false
max_dependency_depth = 5

[performance_profiles.sequential_only]
# Disable parallel execution completely
force_sequential = true
enable_lazy_updates = false
enable_monitoring = false

# =========================================================================
# END OF CONFIGURATION
# =========================================================================
