/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AndeOracleAggregator,
  AndeOracleAggregatorInterface,
} from "../../contracts/AndeOracleAggregator";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientSources",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWeight",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSourcesAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "SourceAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "medianPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deviation",
        type: "uint256",
      },
    ],
    name: "OutlierDetected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "confidence",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourcesUsed",
        type: "uint256",
      },
    ],
    name: "PriceAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SourceAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "SourceRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newWeight",
        type: "uint256",
      },
    ],
    name: "SourceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "CACHE_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_SOURCES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priority",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addSource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "deactivateSource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
    ],
    name: "getPriceWithConfidence",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "confidence",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sourcesUsed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
    ],
    name: "getSourcesForPair",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "oracle",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "priority",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct AndeOracleAggregator.OracleSource[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sources",
    outputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "priority",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
    ],
    name: "updateCache",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pairId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newWeight",
        type: "uint256",
      },
    ],
    name: "updateSourceWeight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001bb565b60006200003a6200013260201b60201c565b90508060000160089054906101000a900460ff161562000086576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146200012f5767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff6040516200012691906200019e565b60405180910390a15b50565b600080620001456200014e60201b60201c565b90508091505090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b600067ffffffffffffffff82169050919050565b620001988162000179565b82525050565b6000602082019050620001b560008301846200018d565b92915050565b611c7280620001cb6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063af5df89611610066578063af5df89614610227578063c2dcb6e414610259578063f2fde38b14610277578063ff0fee1714610293576100ea565b80638da5cb5b146101bd57806394dcf290146101db5780639f26dc1b1461020b576100ea565b806354627af0116100c857806354627af01461016f578063715018a61461018d578063774f1e13146101975780638129fc1c146101b3576100ea565b806325ac427f146100ef57806331d98b3f1461010b57806333b89ffc1461013b575b600080fd5b610109600480360381019061010491906111a4565b6102af565b005b610125600480360381019061012091906111a4565b610364565b60405161013291906111ea565b60405180910390f35b61015560048036038101906101509190611231565b6103eb565b60405161016695949392919061135d565b60405180910390f35b6101776104f3565b60405161018491906111ea565b60405180910390f35b6101956104f8565b005b6101b160048036038101906101ac91906113e3565b61050c565b005b6101bb61068b565b005b6101c5610819565b6040516101d29190611436565b60405180910390f35b6101f560048036038101906101f091906111a4565b610851565b6040516102029190611600565b60405180910390f35b61022560048036038101906102209190611622565b6109d9565b005b610241600480360381019061023c91906111a4565b610b19565b60405161025093929190611662565b60405180910390f35b610261610b34565b60405161026e91906111ea565b60405180910390f35b610291600480360381019061028c9190611699565b610b39565b005b6102ad60048036038101906102a8919061172b565b610bbf565b005b60008060006102bd84610e87565b9250925092506040518060800160405280848152602001838152602001428152602001828152506001600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050837f28836e3c4077d9ebe3a69f690f994cbf4c4d13379872f48fa47aa5e906cb288184848460405161035693929190611662565b60405180910390a250505050565b600080600160008481526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050603c8160400151426103c191906117f4565b10156103d45780600001519150506103e6565b6103dd83610e87565b90505080925050505b919050565b6000602052816000526040600020818154811061040757600080fd5b9060005260206000209060050201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff169080600301549080600401805461047090611857565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90611857565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050905085565b600381565b610500610e9d565b61050a6000610f24565b565b610514610e9d565b6000811480610524575061271081115b1561055b576040517f585b926300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000858152602001908152602001600020905060005b8180549050811015610683578373ffffffffffffffffffffffffffffffffffffffff168282815481106105aa576105a9611888565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610676578282828154811061060b5761060a611888565b5b9060005260206000209060050201600101819055508373ffffffffffffffffffffffffffffffffffffffff16857f0dcb11e2508dff6e49423f61e93c54e59e4845bc478528eea3150c87ec8d371e8560405161066791906111ea565b60405180910390a35050610686565b8080600101915050610574565b50505b505050565b6000610695610ffb565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156106e35750825b9050600060018367ffffffffffffffff16148015610718575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610726575080155b1561075d576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156107ad5760018560000160086101000a81548160ff0219169083151502179055505b6107b63361100f565b83156108125760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516108099190611910565b60405180910390a15b5050505050565b600080610824611023565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6060600080838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156109ce57838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016003820154815260200160048201805461093d90611857565b80601f016020809104026020016040519081016040528092919081815260200182805461096990611857565b80156109b65780601f1061098b576101008083540402835291602001916109b6565b820191906000526020600020905b81548152906001019060200180831161099957829003601f168201915b50505050508152505081526020019060010190610885565b505050509050919050565b6109e1610e9d565b6000806000848152602001908152602001600020905060005b8180549050811015610b12578273ffffffffffffffffffffffffffffffffffffffff16828281548110610a3057610a2f611888565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b05576000828281548110610a9257610a91611888565b5b906000526020600020906005020160020160006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff16847f660a92f3b550db0249aaeedbb215c0925b77441aecaeb16440f1db6e3a6790d760405160405180910390a35050610b15565b80806001019150506109fa565b50505b5050565b6000806000610b2784610e87565b9250925092509193909250565b603c81565b610b41610e9d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bb35760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610baa9190611436565b60405180910390fd5b610bbc81610f24565b50565b610bc7610e9d565b6000841480610bd7575061271084115b15610c0e576040517f585b926300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000888152602001908152602001600020905060005b8180549050811015610ce9578673ffffffffffffffffffffffffffffffffffffffff16828281548110610c5d57610c5c611888565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cdc576040517f6f82db4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080600101915050610c27565b50806040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200160011515815260200186815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550606082015181600301556080820151816004019081610e289190611afc565b5050508573ffffffffffffffffffffffffffffffffffffffff16877f206f5e9e4a0f38814a5de7af7ee4ac18277aa91292a53593223c15b31445761b878686604051610e7693929190611c0a565b60405180910390a350505050505050565b6000806000806000809250925092509193909250565b610ea561104b565b73ffffffffffffffffffffffffffffffffffffffff16610ec3610819565b73ffffffffffffffffffffffffffffffffffffffff1614610f2257610ee661104b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f199190611436565b60405180910390fd5b565b6000610f2e611023565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b600080611006611053565b90508091505090565b61101761107e565b611020816110be565b50565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600033905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b611086611144565b6110bc576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6110c661107e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111385760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161112f9190611436565b60405180910390fd5b61114181610f24565b50565b600061114e610ffb565b60000160089054906101000a900460ff16905090565b600080fd5b600080fd5b6000819050919050565b6111818161116e565b811461118c57600080fd5b50565b60008135905061119e81611178565b92915050565b6000602082840312156111ba576111b9611164565b5b60006111c88482850161118f565b91505092915050565b6000819050919050565b6111e4816111d1565b82525050565b60006020820190506111ff60008301846111db565b92915050565b61120e816111d1565b811461121957600080fd5b50565b60008135905061122b81611205565b92915050565b6000806040838503121561124857611247611164565b5b60006112568582860161118f565b92505060206112678582860161121c565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061129c82611271565b9050919050565b6112ac81611291565b82525050565b60008115159050919050565b6112c7816112b2565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113075780820151818401526020810190506112ec565b60008484015250505050565b6000601f19601f8301169050919050565b600061132f826112cd565b61133981856112d8565b93506113498185602086016112e9565b61135281611313565b840191505092915050565b600060a08201905061137260008301886112a3565b61137f60208301876111db565b61138c60408301866112be565b61139960608301856111db565b81810360808301526113ab8184611324565b90509695505050505050565b6113c081611291565b81146113cb57600080fd5b50565b6000813590506113dd816113b7565b92915050565b6000806000606084860312156113fc576113fb611164565b5b600061140a8682870161118f565b935050602061141b868287016113ce565b925050604061142c8682870161121c565b9150509250925092565b600060208201905061144b60008301846112a3565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61148681611291565b82525050565b611495816111d1565b82525050565b6114a4816112b2565b82525050565b600082825260208201905092915050565b60006114c6826112cd565b6114d081856114aa565b93506114e08185602086016112e9565b6114e981611313565b840191505092915050565b600060a08301600083015161150c600086018261147d565b50602083015161151f602086018261148c565b506040830151611532604086018261149b565b506060830151611545606086018261148c565b506080830151848203608086015261155d82826114bb565b9150508091505092915050565b600061157683836114f4565b905092915050565b6000602082019050919050565b600061159682611451565b6115a0818561145c565b9350836020820285016115b28561146d565b8060005b858110156115ee57848403895281516115cf858261156a565b94506115da8361157e565b925060208a019950506001810190506115b6565b50829750879550505050505092915050565b6000602082019050818103600083015261161a818461158b565b905092915050565b6000806040838503121561163957611638611164565b5b60006116478582860161118f565b9250506020611658858286016113ce565b9150509250929050565b600060608201905061167760008301866111db565b61168460208301856111db565b61169160408301846111db565b949350505050565b6000602082840312156116af576116ae611164565b5b60006116bd848285016113ce565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126116eb576116ea6116c6565b5b8235905067ffffffffffffffff811115611708576117076116cb565b5b602083019150836001820283011115611724576117236116d0565b5b9250929050565b60008060008060008060a0878903121561174857611747611164565b5b600061175689828a0161118f565b965050602061176789828a016113ce565b955050604061177889828a0161121c565b945050606061178989828a0161121c565b935050608087013567ffffffffffffffff8111156117aa576117a9611169565b5b6117b689828a016116d5565b92509250509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117ff826111d1565b915061180a836111d1565b9250828203905081811115611822576118216117c5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061186f57607f821691505b60208210810361188257611881611828565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006118fa6118f56118f0846118b7565b6118d5565b6118c1565b9050919050565b61190a816118df565b82525050565b60006020820190506119256000830184611901565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261197f565b6119c6868361197f565b95508019841693508086168417925050509392505050565b60006119f96119f46119ef846111d1565b6118d5565b6111d1565b9050919050565b6000819050919050565b611a13836119de565b611a27611a1f82611a00565b84845461198c565b825550505050565b600090565b611a3c611a2f565b611a47818484611a0a565b505050565b5b81811015611a6b57611a60600082611a34565b600181019050611a4d565b5050565b601f821115611ab057611a818161195a565b611a8a8461196f565b81016020851015611a99578190505b611aad611aa58561196f565b830182611a4c565b50505b505050565b600082821c905092915050565b6000611ad360001984600802611ab5565b1980831691505092915050565b6000611aec8383611ac2565b9150826002028217905092915050565b611b05826112cd565b67ffffffffffffffff811115611b1e57611b1d61192b565b5b611b288254611857565b611b33828285611a6f565b600060209050601f831160018114611b665760008415611b54578287015190505b611b5e8582611ae0565b865550611bc6565b601f198416611b748661195a565b60005b82811015611b9c57848901518255600182019150602085019450602081019050611b77565b86831015611bb95784890151611bb5601f891682611ac2565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000611be983856112d8565b9350611bf6838584611bce565b611bff83611313565b840190509392505050565b6000604082019050611c1f60008301866111db565b8181036020830152611c32818486611bdd565b905094935050505056fea26469706673582212208a7b5f7b81e552bf426a277f335036b70ca31df509b8fdbf28d8d97ecac165e164736f6c63430008180033";

type AndeOracleAggregatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AndeOracleAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AndeOracleAggregator__factory extends ContractFactory {
  constructor(...args: AndeOracleAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AndeOracleAggregator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AndeOracleAggregator__factory {
    return super.connect(runner) as AndeOracleAggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AndeOracleAggregatorInterface {
    return new Interface(_abi) as AndeOracleAggregatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AndeOracleAggregator {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AndeOracleAggregator;
  }
}
