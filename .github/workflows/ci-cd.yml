name: AndeChain Contracts CI/CD (Foundry)

on:
  push:
    branches: [main, develop, staging]
    paths:
      - 'andechain/contracts/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'andechain/contracts/**'

permissions:
  contents: write
  pull-requests: write
  security-events: write

env:
  FOUNDRY_PROFILE: ci

jobs:
  # ============================================
  # 1. LINTING & CODE FORMAT
  # ============================================
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge fmt
        working-directory: ./andechain/contracts
        id: fmt
        run: forge fmt --check

  # ============================================
  # 2. SMART CONTRACT TESTS
  # ============================================
  test:
    name: Smart Contract Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge tests
        working-directory: ./andechain/contracts
        run: forge test -vv

      - name: Generate coverage report
        working-directory: ./andechain/contracts
        run: forge coverage --report lcov
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./andechain/contracts/lcov.info
          flags: smart-contracts
        continue-on-error: true

  # ============================================
  # 3. COMPILE & BUILD CONTRACTS
  # ============================================
  build:
    name: Compile Contracts
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Compile contracts
        working-directory: ./andechain/contracts
        run: forge build --sizes

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: foundry-artifacts
          path: andechain/contracts/out/
          retention-days: 30

  # ============================================
  # 4. GAS ANALYSIS
  # ============================================
  gas-analysis:
    name: Gas Usage Analysis
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run gas snapshot
        working-directory: ./andechain/contracts
        run: forge snapshot

      - name: Upload gas report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gas-report
          path: andechain/contracts/gas-snapshot.md
        continue-on-error: true

  # ============================================
  # 5. DOCUMENTATION GENERATION
  # ============================================
  documentation:
    name: Generate Contract Documentation
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install solidity-docgen
        working-directory: ./andechain/contracts
        run: npm install solidity-docgen

      - name: Generate contract documentation
        working-directory: ./andechain/contracts
        run: npx solidity-docgen

      - name: Commit documentation
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(contracts): update natspec documentation [skip ci]"
          file_pattern: "andechain/contracts/docs/**/*.md"
          commit_user_name: "AndeChain Bot"
          commit_user_email: "bot@andechain.org"

  # ============================================
  # 6. SECURITY SCANNING
  # ============================================
  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Slither analysis
        uses: crytic/slither-action@v0.4.0
        with:
          target: 'andechain/contracts/'
          slither-args: '--foundry-remap-dependencies'
          sarif: slither.sarif
        continue-on-error: true

      - name: Upload Slither results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'slither.sarif'

