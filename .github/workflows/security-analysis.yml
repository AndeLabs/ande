name: Security Analysis

on:
  push:
    branches: [ develop, main ]
    paths:
      - 'contracts/**/*.sol'
      - '.github/workflows/security-analysis.yml'
  pull_request:
    branches: [ develop, main ]
    paths:
      - 'contracts/**/*.sol'
  workflow_dispatch:

jobs:
  slither:
    name: Slither Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        working-directory: contracts
        run: forge install

      - name: Build contracts
        working-directory: contracts
        run: forge build --build-info

      - name: Run Slither
        uses: crytic/slither-action@v0.3.1
        id: slither
        with:
          target: 'contracts/'
          slither-args: '--filter-paths "lib|test|script" --exclude-dependencies'
          fail-on: medium
          sarif: results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}

  tests:
    name: Security Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        working-directory: contracts
        run: forge install

      - name: Run unit tests
        working-directory: contracts
        run: forge test -vv

      - name: Run coverage
        working-directory: contracts
        run: forge coverage --report summary | tee coverage.txt

      - name: Check coverage threshold
        working-directory: contracts
        run: |
          COVERAGE=$(grep "Total" coverage.txt | awk '{print $NF}' | sed 's/%//')
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 90" | bc -l) )); then
            echo "::warning::Coverage is below 90% threshold"
          fi

  gas-analysis:
    name: Gas Usage Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        working-directory: contracts
        run: forge install

      - name: Generate gas report
        working-directory: contracts
        run: forge test --gas-report > gas-report.txt

      - name: Upload gas report
        uses: actions/upload-artifact@v4
        with:
          name: gas-report
          path: contracts/gas-report.txt

  vulnerability-scan:
    name: Trivy Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
